[gd_resource type="ShaderMaterial" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.255707, 0.667969, 0, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 0

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=6]

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[sub_resource type="VisualShader" id=10]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Input:8
	vec3 n_out8p0 = VERTEX;

// Input:2
	float n_out2p0 = TIME;

// ScalarFunc:3
	float n_out3p0 = sin(n_out2p0);

// ScalarOp:10
	float n_in10p1 = 0.20000;
	float n_out10p0 = n_out3p0 * n_in10p1;

// VectorCompose:7
	float n_in7p0 = 0.00000;
	float n_in7p2 = 0.00000;
	vec3 n_out7p0 = vec3(n_in7p0, n_out10p0, n_in7p2);

// VectorOp:9
	vec3 n_out9p0 = n_out8p0 * n_out7p0;

// Input:4
	vec3 n_out4p0 = VERTEX;

// VectorOp:5
	vec3 n_out5p0 = n_out9p0 + n_out4p0;

// Output:0
	VERTEX = n_out5p0;

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.255707, 0.667969, 0.000000);
	float n_out2p1 = 1.000000;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 119, -27 )
nodes/vertex/0/position = Vector2( 1840, 220 )
nodes/vertex/2/node = SubResource( 3 )
nodes/vertex/2/position = Vector2( 340, 280 )
nodes/vertex/3/node = SubResource( 4 )
nodes/vertex/3/position = Vector2( 520, 280 )
nodes/vertex/4/node = SubResource( 5 )
nodes/vertex/4/position = Vector2( 800, 400 )
nodes/vertex/5/node = SubResource( 6 )
nodes/vertex/5/position = Vector2( 1440, 300 )
nodes/vertex/7/node = SubResource( 7 )
nodes/vertex/7/position = Vector2( 920, 240 )
nodes/vertex/8/node = SubResource( 8 )
nodes/vertex/8/position = Vector2( 800, 80 )
nodes/vertex/9/node = SubResource( 9 )
nodes/vertex/9/position = Vector2( 1240, 140 )
nodes/vertex/10/node = SubResource( 2 )
nodes/vertex/10/position = Vector2( 740, 240 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 4, 0, 5, 1, 9, 0, 5, 0, 8, 0, 9, 0, 7, 0, 9, 1, 3, 0, 10, 0, 10, 0, 7, 1, 5, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 1400, 80 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 1000, 80 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )

[resource]
shader = SubResource( 10 )
